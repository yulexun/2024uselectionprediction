---
title: "Prediction of US election with linear model"
author: 
  - Colin Sihan Yang
  - Lexun Yu
  - Siddharth Gowda
thanks: "Code and data are available at: [https://github.com/yulexun/uselection](https://github.com/yulexun/uselection)."
date: today
date-format: long
abstract: "This paper forecast the winner of the upcoming US presidential election using “poll-of-polls” by building a linear model."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(modelsummary)
```


\newpage


# Graphs and Tables

```{r}

clean_data <- read_csv("../data/02-analysis_data/cleaned_data.csv")
head(clean_data)

head(clean_data)
```

## Relationship Pollscore and Sample Size

```{r}

# removing outliers and na's

graph_data <- clean_data %>% 
  filter(!is.na(pollscore) & !is.na(sample_size)) 

outlier_top <- (quantile(graph_data$sample_size, 0.75) + 
                  IQR(graph_data$sample_size)*1.5)

outlier_bottom <- (quantile(graph_data$sample_size, 0.25) - 
                  IQR(graph_data$sample_size)*1.5)

graph_data <- clean_data %>%
  filter(sample_size < outlier_top & sample_size > outlier_bottom)

graph_data %>% filter(!is.na(pollscore) & !is.na(sample_size)) %>% 
  ggplot(aes(x = pollscore, y = log(sample_size))) +
  geom_point() + geom_smooth(method = "lm", se = FALSE, color = "red")

# this model is really here just for explain, this realtionship should not
# be treated as lienar
lm_score_sample <- lm(log(sample_size) ~ pollscore, data = graph_data)
summary(lm_score_sample)


```

## Relationship Between Pollscore and Transparency Score

```{r}

clean_data %>% filter(!is.na(pollscore) & !is.na(transparency_score)) %>% 
  ggplot(aes(x = pollscore, y = transparency_score)) +
  geom_point() + geom_smooth(method = "lm", se = FALSE, color = "red")

# this model is really here just for explain, this realtionship should not
# be treated as lienar
lm_score_sample <- lm(pollscore ~ transparency_score, data = clean_data)
summary(lm_score_sample)

```

## Relationship Between Days Taken From Electon and Support Percentage

```{r}
head(clean_data)

clean_data %>% 
  filter(!is.na(days_taken_from_election) & !is.na(pct)) %>% 
  filter(candidate_name %in% c("Kamala Harris", "Donald Trump")) %>% 
  ggplot(aes(x = days_taken_from_election, y = pct)) +
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(x = "Days Before Election",
       y = "Poll Percentage") + facet_wrap(~candidate_name)

```

## Metholody And Support Percentage

```{r}

head(clean_data)

clean_data %>% 
  filter(!is.na(methodology) & !is.na(pct)) %>% 
  filter(candidate_name %in% c("Kamala Harris", "Donald Trump")) %>% 
  ggplot(aes(x = methodology, y = pct, fill = candidate_name)) +
  geom_boxplot(position = position_dodge(width = 0.9)) +
  labs(x = "Methodology", y = "Percentage", 
       title = "Poll Percentages by Methodology and Candidate",
       fill = "Candidate") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "top") +
  scale_fill_brewer(palette = "Set1")


```
